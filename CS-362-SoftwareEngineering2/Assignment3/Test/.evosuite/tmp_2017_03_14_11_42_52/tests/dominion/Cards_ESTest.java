/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 14 18:47:49 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import dominion.Cards;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Cards_ESTest extends Cards_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cards cards0 = new Cards((String) null, (-117), 0, (String) null, (Boolean) null);
      cards0.getType();
      assertEquals(-117, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cards cards0 = new Cards("h8b/~/FI<cqE", 0, 0, "h8b/~/FI<cqE", (Boolean) null);
      cards0.getType();
      assertEquals(0, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Cards cards0 = new Cards("#=G$84Pm6nzf", (-41), (-41), "#=G$84Pm6nzf", boolean0);
      cards0.getToken();
      assertEquals(-41, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cards cards0 = new Cards((String) null, 1144, 1233, (String) null, (Boolean) null);
      cards0.getName();
      assertEquals(1144, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Cards cards0 = new Cards("h8b/~/FI<cqE", 0, 0, "h8b/~/FI<cqE", (Boolean) null);
      cards0.getName();
      assertEquals(0, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Cards cards0 = new Cards("II;^:TWU*P^m_jX$", 1180, 1180, "", (Boolean) null);
      int int0 = cards0.getCost();
      assertEquals("II;^:TWU*P^m_jX$", cards0.getName());
      assertEquals("", cards0.getType());
      assertEquals(1180, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Cards cards0 = new Cards("", (-2685), (-2685), "", boolean0);
      int int0 = cards0.getCost();
      assertEquals((-2685), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Cards cards0 = new Cards((String) null, 1144, 1233, (String) null, (Boolean) null);
      cards0.addEmbargo();
      Boolean boolean0 = cards0.getToken();
      assertEquals(1144, cards0.getCost());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Cards cards0 = new Cards("", (-1660), (-1660), "", (Boolean) null);
      cards0.getName();
      assertEquals(-1660, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Cards cards0 = new Cards("wk@R6Ijfv", 0, 0, "wk@R6Ijfv", boolean0);
      int int0 = cards0.getCost();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Cards cards0 = new Cards("", (-1), (-1), "", (Boolean) null);
      cards0.getType();
      assertEquals(-1, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Cards cards0 = new Cards("8g#0&p5s%3o<4w`R ", 0, (-1659), "8g#0&p5s%3o<4w`R ", (Boolean) null);
      cards0.getToken();
      assertEquals(0, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Cards cards0 = new Cards((String) null, 1144, 1233, (String) null, (Boolean) null);
      String string0 = cards0.toString();
      assertEquals("null 1144 1233 null null", string0);
  }
}
