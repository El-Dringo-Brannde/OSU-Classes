/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 14 17:38:51 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import dominion.Cards;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Cards_ESTest extends Cards_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Boolean boolean0 = new Boolean("Y");
      Cards cards0 = new Cards("Y", 935, 935, "Y", boolean0);
      cards0.getType();
      assertEquals(935, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Cards cards0 = new Cards("", 3389, 3389, "", boolean0);
      cards0.getType();
      assertEquals(3389, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cards cards0 = new Cards((String) null, 1, 1, "", (Boolean) null);
      cards0.getToken();
      assertEquals(1, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Cards cards0 = new Cards("", (-1), (-1), "", boolean0);
      cards0.getToken();
      assertEquals(-1, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      Cards cards0 = new Cards("8C", 1560, 1560, "8C", boolean0);
      cards0.getName();
      assertEquals(1560, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Cards cards0 = new Cards("", 3389, 3389, "", boolean0);
      cards0.getName();
      assertEquals(3389, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Cards cards0 = new Cards("wk@R6Ijfv", 0, 0, "wk@R6Ijfv", boolean0);
      int int0 = cards0.getCost();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      Cards cards0 = new Cards("0<Q??", (-3218), (-3218), "0<Q??", boolean0);
      int int0 = cards0.getCost();
      assertEquals((-3218), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Cards cards0 = new Cards((String) null, 1, 1, "", (Boolean) null);
      cards0.addEmbargo();
      assertEquals(1, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Cards cards0 = new Cards((String) null, 1, 1, "", (Boolean) null);
      String string0 = cards0.getName();
      assertEquals(1, cards0.getCost());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Cards cards0 = new Cards((String) null, 1, 1, "", (Boolean) null);
      int int0 = cards0.getCost();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      Cards cards0 = new Cards((String) null, 0, 0, (String) null, boolean0);
      cards0.getType();
      assertEquals(0, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      Cards cards0 = new Cards((String) null, 0, 0, (String) null, boolean0);
      cards0.getToken();
      assertEquals(0, cards0.getCost());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Cards cards0 = new Cards((String) null, 1, 1, "", (Boolean) null);
      String string0 = cards0.toString();
      assertEquals("null 1 1  null", string0);
  }
}
