/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 14 17:36:30 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Cards;
import dominion.Deck;
import dominion.PlayDominion;
import dominion.PlayDominionRand;
import dominion.Player;
import dominion.RandNumbers;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlayDominion_ESTest extends PlayDominion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Random.setNextRandom(1);
      int int0 = PlayDominionRand.tempActionTurns;
      List<Player> list0 = PlayDominion.Players;
      Deck deck0 = PlayDominion.AllDecks;
      int int1 = PlayDominionRand.timesFailed;
      Boolean boolean0 = Boolean.valueOf(true);
      Cards cards0 = new Cards("\"+,v>", 0, 0, "========================= ", boolean0);
      cards0.toString();
      cards0.toString();
      Player player0 = PlayDominion.p2;
      cards0.addEmbargo();
      PlayDominionRand.testCard(cards0, player0);
      RandNumbers randNumbers0 = new RandNumbers();
      PlayDominion.Randoms = randNumbers0;
      int int2 = PlayDominionRand.tempVPoints;
      PlayDominion.PlayerTurn(player0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlayDominionRand.tempBuyTurns = 0;
      PlayDominion playDominion0 = new PlayDominion();
      int int0 = PlayDominionRand.timePassed;
      // Undeclared exception!
      try { 
        PlayDominion.PlayerTurn((Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.PlayDominion", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlayDominionRand.tempDeckSize = 7;
      PlayDominion playDominion0 = new PlayDominion();
      // Undeclared exception!
      try { 
        PlayDominion.CheckMoneyPile((-1107));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlayDominion playDominion0 = new PlayDominion();
      Player player0 = PlayDominion.p2;
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlayDominionRand.reset();
      PlayDominion.CheckifPileIsEmpty(0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        PlayDominion.CheckifPileIsEmpty((-3968));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlayDominionRand.tempActionTurns = 0;
      Deck deck0 = new Deck();
      Deck.Build_Money_Victory();
      Deck.Build_Action_Deck();
      Deck.Build_Action_Deck();
      List<Cards> list0 = Deck.curseCards;
      deck0.curseCards = list0;
      Deck.Build_Action_Deck();
      Deck.Build_Money_Victory();
      PlayDominion.AllDecks = deck0;
      int int0 = PlayDominionRand.tempHandSize;
      Player player0 = PlayDominion.p2;
      // Undeclared exception!
      PlayDominion.PlayerTurn(player0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlayDominionRand.tempGoldInHand = (-1913);
      // Undeclared exception!
      try { 
        PlayDominion.CheckEndGame();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = null;
      String string1 = "";
      Boolean boolean0 = Boolean.FALSE;
      Cards cards0 = new Cards((String) null, 0, 0, "", boolean0);
      Boolean.getBoolean("");
      Boolean.logicalAnd(true, false);
      Boolean.logicalAnd(true, false);
      cards0.addEmbargo();
      String string2 = "ib>";
      Boolean.getBoolean("ib>");
      Player player0 = null;
      // Undeclared exception!
      try { 
        PlayDominionRand.holdData(cards0, (Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.PlayDominionRand", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = PlayDominionRand.timesFailed;
      Player player0 = new Player("RorE!ogGr}\"~F^1Oj");
      // Undeclared exception!
      try { 
        player0.Hand_To_Discard(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      PlayDominion.genPlayers();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Boolean boolean0 = new Boolean((String) null);
      Cards cards0 = new Cards((String) null, 1641, 11, "5v74*Cvaj", boolean0);
      cards0.addEmbargo();
      Player player0 = PlayDominion.p1;
      PlayDominionRand.testCard(cards0, player0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RandNumbers randNumbers0 = new RandNumbers();
      int int0 = (-2373);
      PlayDominion.Randoms = randNumbers0;
      Player player0 = PlayDominion.p1;
      // Undeclared exception!
      try { 
        PlayDominion.PlayerTurn(player0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "#74@GCs~4MAljS/";
      Boolean boolean0 = Boolean.TRUE;
      Cards cards0 = new Cards("", 0, 504, "#74@GCs~4MAljS/", boolean0);
      Boolean.logicalAnd(true, true);
      cards0.toString();
      cards0.toString();
      Player player0 = PlayDominion.p2;
      player0.getNewDeck();
      player0.toString();
      PlayDominionRand.holdData(cards0, player0);
      int int0 = PlayDominionRand.tempActionTurns;
      // Undeclared exception!
      try { 
        PlayDominion.CheckMoneyPile(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Cards cards0 = new Cards("EAWlJs", (-559), 2398323, "EAWlJs", boolean0);
      Player player0 = new Player("EAWlJs");
      cards0.toString();
      Boolean.getBoolean("BlvW|BBf7)3ZJi2d");
      PlayDominionRand.holdData(cards0, player0);
      // Undeclared exception!
      try { 
        PlayDominion.Play_Game();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      Cards cards0 = new Cards("", 5, 2220, "", boolean0);
      cards0.toString();
      Player player0 = new Player("");
      PlayDominionRand.holdData(cards0, player0);
      LinkedList<Player> linkedList0 = new LinkedList<Player>();
      PlayDominion.Players = (List<Player>) linkedList0;
      PlayDominionRand.timePassed = (-2394);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = " 5 2220  true";
      stringArray0[4] = "";
      stringArray0[5] = "";
      // Undeclared exception!
      PlayDominion.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "(DGn[D@.A)43";
      stringArray0[1] = "Y?qXy.oAOC^P]";
      stringArray0[2] = "Player1";
      stringArray0[3] = "";
      stringArray0[4] = "!a(,jM";
      stringArray0[5] = "x}ydm&8I'j|e,w j3x";
      stringArray0[6] = "ex=(V5";
      stringArray0[7] = "";
      stringArray0[8] = "";
      // Undeclared exception!
      PlayDominion.main(stringArray0);
  }
}
