/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 14 17:34:31 GMT 2017
 */

package dominion;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dominion.Cards;
import dominion.PlayDominionRand;
import dominion.Player;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlayDominionRand_ESTest extends PlayDominionRand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        PlayDominionRand.testCard((Cards) null, (Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.PlayDominionRand", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        PlayDominionRand.holdData((Cards) null, (Player) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dominion.PlayDominionRand", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PlayDominionRand.reset();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PlayDominionRand playDominionRand0 = new PlayDominionRand();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PlayDominionRand.getCount();
  }
}
